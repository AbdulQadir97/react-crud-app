{"version":3,"sources":["config/firebase-config.js","component/Form.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","Form","useState","newEmail","setNewEmail","newPass","setNewPass","newName","setNewName","register","a","createUserWithEmailAndPassword","user","console","log","message","usersCollectionRef","collection","createUser","addDoc","email","pass","name","res","className","placeholder","onChange","event","target","value","type","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAYQA,EAAMC,YATS,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGJC,EAAOC,YAAQV,GACfW,EAAKC,YAAaZ,G,gBC6EZa,EA7ER,WACX,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,uCAAG,4BAAAC,EAAA,+EAEMC,YACjBd,EACAM,EACAE,GALW,OAEPO,EAFO,OAObC,QAAQC,IAAIF,GAPC,gDASbC,QAAQC,IAAI,KAAMC,SATL,yDAAH,qDAcRC,EAAqBC,YAAWlB,EAAI,SAGpCmB,EAAU,uCAAG,4BAAAR,EAAA,sEAECS,YAAOH,EAAoB,CAAEI,MAAOjB,EAAUkB,KAAMhB,EAASiB,KAAKf,IAFnE,OAEXgB,EAFW,OAGjBd,EAASc,GAHQ,2CAAH,qDA4BhB,OACE,sBAAKC,UAAU,MAAf,UACE,uBACEC,YAAY,UACZC,SAAU,SAACC,GACTnB,EAAWmB,EAAMC,OAAOC,UAG5B,uBACEJ,YAAY,WACZC,SAAU,SAACC,GACTvB,EAAYuB,EAAMC,OAAOC,UAG7B,uBACEC,KAAK,WACLL,YAAY,UACZC,SAAU,SAACC,GACTrB,EAAWqB,EAAMC,OAAOC,UAI5B,wBAAQE,QAASb,EAAjB,8BC3ESc,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACC,cAAC,EAAD,OCMUS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8076aea.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from '@firebase/auth';\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAiNy8eZY2VhH8PXEKSzrghpxx1l2barJ0\",\r\n    authDomain: \"crud-app-d1237.firebaseapp.com\",\r\n    projectId: \"crud-app-d1237\",\r\n    storageBucket: \"crud-app-d1237.appspot.com\",\r\n    messagingSenderId: \"932822748585\",\r\n    appId: \"1:932822748585:web:d822f263427a67cfa288b8\",\r\n    measurementId: \"G-KFK9KE1L73\"\r\n  };\r\n  const app = initializeApp(firebaseConfig);\r\n  export const auth = getAuth(app)\r\n  export const db = getFirestore(app)\r\n\r\n","import { useState, useEffect } from \"react\";\r\n//import \"./App.css\";\r\nimport { db, auth } from \"../config/firebase-config\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc,\r\n  setDoc\r\n} from \"firebase/firestore\";\r\nimport { createUserWithEmailAndPassword } from \"@firebase/auth\";\r\n\r\nconst Form = ()=> {\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [newPass, setNewPass] = useState('');\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const register = async () => {\r\n    try {\r\n      const user = await createUserWithEmailAndPassword(\r\n        auth,\r\n        newEmail,\r\n        newPass\r\n      );\r\n      console.log(user);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //const [users, setUsers] = useState([]);\r\n  const usersCollectionRef = collection(db, \"users\");\r\n  const mydoc = usersCollectionRef\r\n  \r\n  const createUser = async () => {\r\n    \r\n    const res = await addDoc(usersCollectionRef, { email: newEmail, pass: newPass, name:newName });\r\n    register(res);\r\n    //setNewName('')\r\n    //setNewAge('')\r\n  };\r\n\r\n//   const updateUser = async (id, age) => {\r\n//     const userDoc = doc(db, \"users\", id);\r\n//     const newFields = { age: age + 1 };\r\n//     await updateDoc(userDoc, newFields);\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     const userDoc = doc(db, \"users\", id);\r\n//     await deleteDoc(userDoc);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const getUsers = async () => {\r\n//       const data = await getDocs(usersCollectionRef);\r\n//       setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n//     };\r\n\r\n//     getUsers();\r\n//   }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <input\r\n        placeholder=\"Name...\"\r\n        onChange={(event) => {\r\n          setNewName(event.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        placeholder=\"Email...\"\r\n        onChange={(event) => {\r\n          setNewEmail(event.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"pass...\"\r\n        onChange={(event) => {\r\n          setNewPass(event.target.value);\r\n        }}\r\n      />\r\n\r\n      <button onClick={createUser}> Create User</button>\r\n\r\n      </div>\r\n  )}\r\n\r\n      export default Form;","import './App.css';\nimport Form from './component/Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}